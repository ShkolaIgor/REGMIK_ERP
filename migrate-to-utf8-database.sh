#!/bin/bash

# –ú—ñ–≥—Ä–∞—Ü—ñ—è –¥–æ –Ω–æ–≤–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è–º
# –¶–µ–π —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤—É –±–∞–∑—É –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –∫–æ–¥—É–≤–∞–Ω–Ω—è–º —Ç–∞ –º—ñ–≥—Ä—É—î –≤—Å—ñ –¥–∞–Ω—ñ

set -e

APP_DIR="/var/www/regmik-erp"
SERVICE_NAME="regmik-erp"
OLD_DB="regmik-erp"
NEW_DB="regmik-erp-utf8"
BACKUP_DIR="/tmp/db-migration-$(date +%Y%m%d-%H%M%S)"

echo "üöÄ –ü–æ—á–∞—Ç–æ–∫ –º—ñ–≥—Ä–∞—Ü—ñ—ó –¥–æ UTF-8 –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
echo "–°—Ç–≤–æ—Ä—é—î—Ç—å—Å—è backup –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $BACKUP_DIR"
mkdir -p "$BACKUP_DIR"

# –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—É
echo "‚èπÔ∏è –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—É..."
systemctl stop "$SERVICE_NAME" || true

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ backup –ø–æ—Ç–æ—á–Ω–æ—ó –±–∞–∑–∏
echo "üíæ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è backup –ø–æ—Ç–æ—á–Ω–æ—ó –±–∞–∑–∏..."
sudo -u postgres pg_dump -Fc "$OLD_DB" > "$BACKUP_DIR/old-database.backup"
echo "Backup –∑–±–µ—Ä–µ–∂–µ–Ω–æ: $BACKUP_DIR/old-database.backup"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –±–∞–∑–∏ –∑ UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è–º
echo "üÜï –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –±–∞–∑–∏ –∑ UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è–º..."
sudo -u postgres psql << EOF
-- –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω—å –¥–æ —Å—Ç–∞—Ä–æ—ó –±–∞–∑–∏
SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$OLD_DB' AND pid <> pg_backend_pid();

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –±–∞–∑–∏ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –∫–æ–¥—É–≤–∞–Ω–Ω—è–º
DROP DATABASE IF EXISTS "$NEW_DB";
CREATE DATABASE "$NEW_DB" 
  WITH ENCODING 'UTF8' 
       LC_COLLATE 'uk_UA.UTF-8' 
       LC_CTYPE 'uk_UA.UTF-8' 
       TEMPLATE template0;

-- –ù–∞–¥–∞–Ω–Ω—è –ø—Ä–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
GRANT ALL PRIVILEGES ON DATABASE "$NEW_DB" TO postgres;
EOF

echo "‚úÖ –ù–æ–≤–∞ –±–∞–∑–∞ '$NEW_DB' —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∑ UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è–º"

# –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ –Ω–æ–≤—É –±–∞–∑—É
echo "üì• –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ –Ω–æ–≤—É –±–∞–∑—É..."
sudo -u postgres pg_restore -d "$NEW_DB" "$BACKUP_DIR/old-database.backup"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –±–∞–∑–∏
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –±–∞–∑–∏..."
sudo -u postgres psql -d "$NEW_DB" -c "SHOW server_encoding; SHOW client_encoding; SHOW lc_collate; SHOW lc_ctype;"

# Backup –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
echo "üíæ Backup –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
cp "$APP_DIR/.env" "$BACKUP_DIR/env.backup" 2>/dev/null || echo "–§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è DATABASE_URL –≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
echo "‚öôÔ∏è –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
if [ -f "$APP_DIR/.env" ]; then
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è backup .env —Ñ–∞–π–ª—É
    cp "$APP_DIR/.env" "$APP_DIR/.env.backup"
    
    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è DATABASE_URL
    sed -i "s/DATABASE_URL=.*regmik-erp/DATABASE_URL=postgresql:\/\/postgres@localhost:5432\/$NEW_DB/" "$APP_DIR/.env"
    echo "DATABASE_URL –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –Ω–æ–≤–æ—ó –±–∞–∑–∏"
else
    echo "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä—É—á–Ω—É –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ DATABASE_URL"
fi

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –Ω–æ–≤–æ—é –±–∞–∑–æ—é
echo "üîó –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –Ω–æ–≤–æ—é –±–∞–∑–æ—é..."
cd "$APP_DIR"
DATABASE_URL="postgresql://postgres@localhost:5432/$NEW_DB" npm run db:push || echo "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ schema"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—É
echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—É..."
systemctl start "$SERVICE_NAME"

# –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—É..."
sleep 10

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Unicode –ø–æ—à—É–∫—É
echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Unicode –ø–æ—à—É–∫—É..."
if systemctl is-active --quiet "$SERVICE_NAME"; then
    echo "–°–µ—Ä–≤—ñ—Å –∑–∞–ø—É—â–µ–Ω–æ, —Ç–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫..."
    sleep 5
    
    # –¢–µ—Å—Ç –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    DIAGNOSTIC_RESULT=$(curl -s "http://localhost:3000/api/nova-poshta/diagnostics?q=—á–µ" 2>/dev/null || echo "failed")
    
    if [[ "$DIAGNOSTIC_RESULT" == *"1451"* ]]; then
        echo "üéâ –£–°–ü–Ü–•! UTF-8 –ø–æ—à—É–∫ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"
        echo "–ó–Ω–∞–π–¥–µ–Ω–æ 1451 –º—ñ—Å—Ç –¥–ª—è –∑–∞–ø–∏—Ç—É '—á–µ'"
        
        # –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ç–µ—Å—Ç–∏
        echo "–î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ç–µ—Å—Ç–∏..."
        CHERNIVTSI_TEST=$(curl -s "http://localhost:3000/api/nova-poshta/cities?q=–ß–µ—Ä–Ω—ñ–≤—Ü—ñ" 2>/dev/null | jq '.length // 0' 2>/dev/null || echo "0")
        KYIV_TEST=$(curl -s "http://localhost:3000/api/nova-poshta/cities?q=–ö–∏—ó–≤" 2>/dev/null | jq '.length // 0' 2>/dev/null || echo "0")
        
        echo "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ: $CHERNIVTSI_TEST —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤"
        echo "–ö–∏—ó–≤: $KYIV_TEST —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤"
        
        if [ "$CHERNIVTSI_TEST" -gt 0 ] && [ "$KYIV_TEST" -gt 0 ]; then
            echo "‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!"
            echo ""
            echo "üîÑ –û—Å—Ç–∞—Ç–æ—á–Ω—ñ –∫—Ä–æ–∫–∏:"
            echo "1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–æ–±–æ—Ç—É —Å–∏—Å—Ç–µ–º–∏"
            echo "2. –ü—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª—ñ—Ç—å —Å—Ç–∞—Ä—É –±–∞–∑—É: DROP DATABASE \"$OLD_DB\";"
            echo "3. –ü–µ—Ä–µ–π–º–µ–Ω—É–π—Ç–µ –Ω–æ–≤—É –±–∞–∑—É: ALTER DATABASE \"$NEW_DB\" RENAME TO \"$OLD_DB\";"
            echo ""
            echo "üìÅ Backup —Ñ–∞–π–ª–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤: $BACKUP_DIR"
        else
            echo "‚ö†Ô∏è –î–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π—à–ª–∏, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏"
        fi
    else
        echo "‚ùå –¢–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π—à–ª–∏. –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞: $DIAGNOSTIC_RESULT"
        echo "–ú–æ–∂–ª–∏–≤–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω rollback..."
    fi
else
    echo "‚ùå –°–µ—Ä–≤—ñ—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–≤—Å—è, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏"
    echo "–î–ª—è rollback –≤–∏–∫–æ–Ω–∞–π—Ç–µ: systemctl stop $SERVICE_NAME && cp $APP_DIR/.env.backup $APP_DIR/.env && systemctl start $SERVICE_NAME"
fi

echo ""
echo "üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º—ñ–≥—Ä–∞—Ü—ñ—é:"
echo "–°—Ç–∞—Ä–∞ –±–∞–∑–∞: $OLD_DB"
echo "–ù–æ–≤–∞ –±–∞–∑–∞: $NEW_DB"
echo "Backup: $BACKUP_DIR"
echo "–õ–æ–≥–∏ —Å–µ—Ä–≤—ñ—Å—É: journalctl -u $SERVICE_NAME -f"