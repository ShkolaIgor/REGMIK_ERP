#!/usr/bin/env node

// –ü—Ä–æ—Å—Ç–∏–π –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
import pg from 'pg';

const { Pool } = pg;
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
});

async function test1CIntegration() {
  try {
    console.log('üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
    console.log('üìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î...');
    const dbResult = await pool.query('SELECT NOW() as current_time');
    console.log('‚úÖ –ë–î –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ:', dbResult.rows[0]);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω–∏—Ö –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
    console.log('üîß –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ 1–° –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π...');
    const integrations = await pool.query(`
      SELECT id, name, type, is_active, config 
      FROM integration_configs 
      WHERE type = '1c_accounting' AND is_active = true
    `);
    
    console.log(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${integrations.rows.length} –∞–∫—Ç–∏–≤–Ω–∏—Ö 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π:`);
    for (const integration of integrations.rows) {
      console.log(`  - ID: ${integration.id}, –ù–∞–∑–≤–∞: ${integration.name}`);
      console.log(`  - –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:`, integration.config);
    }
    
    if (integrations.rows.length === 0) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π!');
      console.log('üí° –†—ñ—à–µ–Ω–Ω—è: –°—Ç–≤–æ—Ä—ñ—Ç—å –∞–∫—Ç–∏–≤–Ω—É 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é —á–µ—Ä–µ–∑ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    }
    
    // –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ–≥–æ HTTP –∑–∞–ø–∏—Ç—É
    console.log('üåê –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è HTTP –∑–∞–ø–∏—Ç—É...');
    try {
      const response = await fetch('https://httpbin.org/get');
      const data = await response.json();
      console.log('‚úÖ HTTP –∑–∞–ø–∏—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å');
    } catch (httpError) {
      console.log('‚ùå HTTP –∑–∞–ø–∏—Ç–∏ –Ω–µ –ø—Ä–∞—Ü—é—é—Ç—å:', httpError.message);
    }
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê:', error);
  } finally {
    await pool.end();
    process.exit();
  }
}

test1CIntegration();