// –¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —â–æ –Ω–æ–≤–∞ –ª–æ–≥—ñ–∫–∞ –æ–±—Ä–æ–±–ª—è—î –í–°–Ü –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ email

async function testUniversalBankingLogic() {
  const baseUrl = 'http://localhost:5000';
  
  // –¢–µ—Å—Ç–æ–≤–∏–π email –æ–ø–µ—Ä–∞—Ü—ñ—ó —Å–ø–∏—Å–∞–Ω–Ω—è (–±–µ–∑ –Ω–æ–º–µ—Ä—É —Ä–∞—Ö—É–Ω–∫—É)
  const testEmailDebiting = {
    messageId: "test-debit-12345",
    subject: "–ë–∞–Ω–∫—ñ–≤—Å—å–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–ø–µ—Ä–∞—Ü—ñ—é",
    fromAddress: "online@ukrsibbank.com",
    receivedAt: new Date().toISOString(),
    textContent: `
      <br>12:45<br>
      —Ä—É—Ö –∫–æ—à—Ç—ñ–≤ –ø–æ —Ä–∞—Ö—É–Ω–∫—É: UA743510050000026005031648800,<br>
      –≤–∞–ª—é—Ç–∞: UAH,<br>
      —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü—ñ—ó: —Å–ø–∏—Å–∞–Ω–æ,<br>
      —Å—É–º–º–∞: 2500.00,<br>
      –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç—É: @2PL123456,<br>
      –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç: –¢–ï–°–¢–û–í–ê –ö–û–ú–ü–ê–ù–Ü–Ø –¢–û–í,<br>
      —Ä–∞—Ö—É–Ω–æ–∫ –∫–æ—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞: UA123456789012345678901234567,<br>
      –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: –û–ø–ª–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª—É–≥–∏, –∫–æ–º—ñ—Å—ñ—è –±–∞–Ω–∫—É<br>
      –∫–ª—ñ—î–Ω—Ç: –ù–í–§ "–†–ï–ì–ú–Ü–ö".<br>
      –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞ –ª—ñ–Ω—ñ—è: 729
    `
  };
  
  // –¢–µ—Å—Ç–æ–≤–∏–π email –ø–µ—Ä–µ–∫–∞–∑—É (–±–µ–∑ –Ω–æ–º–µ—Ä—É —Ä–∞—Ö—É–Ω–∫—É)
  const testEmailTransfer = {
    messageId: "test-transfer-67890",
    subject: "–ë–∞–Ω–∫—ñ–≤—Å—å–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
    fromAddress: "online@ukrsibbank.com", 
    receivedAt: new Date().toISOString(),
    textContent: `
      <br>14:20<br>
      —Ä—É—Ö –∫–æ—à—Ç—ñ–≤ –ø–æ —Ä–∞—Ö—É–Ω–∫—É: UA743510050000026005031648800,<br>
      –≤–∞–ª—é—Ç–∞: UAH,<br>
      —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü—ñ—ó: –ø–µ—Ä–µ–∫–∞–∑,<br>
      —Å—É–º–º–∞: 750.50,<br>
      –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç—É: @2PL789012,<br>
      –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç: –Ü–ù–®–ê–ë–ê–ù–ö,<br>
      —Ä–∞—Ö—É–Ω–æ–∫ –∫–æ—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–∞: UA987654321098765432109876543,<br>
      –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: –ú—ñ–∂–±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –ø–µ—Ä–µ–∫–∞–∑ –∫–æ—à—Ç—ñ–≤<br>
      –∫–ª—ñ—î–Ω—Ç: –ù–í–§ "–†–ï–ì–ú–Ü–ö".<br>
    `
  };

  console.log("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–æ—ó –ª–æ–≥—ñ–∫–∏ –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ–≥–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É");
  
  try {
    // –¢–µ—Å—Ç 1: –û–ø–µ—Ä–∞—Ü—ñ—è —Å–ø–∏—Å–∞–Ω–Ω—è
    console.log("\nüì§ –¢–µ—Å—Ç 1: –û–ø–µ—Ä–∞—Ü—ñ—è —Å–ø–∏—Å–∞–Ω–Ω—è");
    const response1 = await fetch(`${baseUrl}/api/test-bank-email`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ emailContent: testEmailDebiting.textContent })
    });
    
    const result1 = await response1.json();
    console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç 1:", result1);
    
    // –¢–µ—Å—Ç 2: –û–ø–µ—Ä–∞—Ü—ñ—è –ø–µ—Ä–µ–∫–∞–∑—É  
    console.log("\n‚ÜîÔ∏è –¢–µ—Å—Ç 2: –û–ø–µ—Ä–∞—Ü—ñ—è –ø–µ—Ä–µ–∫–∞–∑—É");
    const response2 = await fetch(`${baseUrl}/api/test-bank-email`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ emailContent: testEmailTransfer.textContent })
    });
    
    const result2 = await response2.json();
    console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç 2:", result2);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log("\nüìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—ñ—Å–ª—è —Ç–µ—Å—Ç—ñ–≤");
    const statsResponse = await fetch(`${baseUrl}/api/bank-email-stats`);
    const stats = await statsResponse.json();
    console.log("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:", stats);
    
    return { 
      success: true, 
      debitTest: result1, 
      transferTest: result2, 
      stats 
    };
    
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:", error);
    return { success: false, error: error.message };
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testUniversalBankingLogic().then(result => {
  console.log("\nüèÅ –§–Ü–ù–ê–õ–¨–ù–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢:");
  console.log(JSON.stringify(result, null, 2));
}).catch(console.error);