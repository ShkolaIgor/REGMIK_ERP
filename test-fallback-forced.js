/**
 * –¢–µ—Å—Ç –¥–ª—è —Ñ–æ—Ä—Å—É–≤–∞–Ω–Ω—è fallback —Ä–µ–∂–∏–º—É —Ç–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö
 */

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—ñ
import { DatabaseStorage } from './server/db-storage.js';

console.log('üîß –¢–µ—Å—Ç fallback —Ä–µ–∂–∏–º—É 1–° –≤–∏—Ö—ñ–¥–Ω–∏—Ö —Ä–∞—Ö—É–Ω–∫—ñ–≤\n');

async function testFallbackProcessing() {
  try {
    console.log('1. –°—Ç–≤–æ—Ä—é—î–º–æ instance DatabaseStorage...');
    const storage = new DatabaseStorage();
    
    console.log('2. –§–æ—Ä—Å—É—î–º–æ fallback —Ä–µ–∂–∏–º (simulating 1C server unavailable)...');
    
    // –ú–∞–Ω—É–∞–ª—å–Ω–æ –≤–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö –∑ —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
    const testData = {
      "invoices": [
        {
          "invoiceNumber": "–†–ú00-027688",
          "date": "2025-07-11",
          "client": "–í–Ü–ö–û–†–î",
          "amount": 9072,
          "currency": "980",
          "notes": "",
          "status": "posted"
        }
      ]
    };
    
    console.log('3. –¢–µ—Å—Ç—É—î–º–æ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö...');
    
    // –°–∏–º—É–ª—é—î–º–æ –æ–±—Ä–æ–±–∫—É —è–∫ –≤ get1COutgoingInvoices
    const processedInvoices = testData.invoices.map((invoice, index) => {
      console.log(`   –û–±—Ä–æ–±–ª—è—î–º–æ —Ä–∞—Ö—É–Ω–æ–∫ ${index + 1}:`, invoice);
      
      const result = {
        id: invoice.invoiceNumber || `1c-${index}`,
        number: invoice.invoiceNumber || `‚Ññ${index + 1}`,
        date: invoice.date || new Date().toISOString().split('T')[0],
        clientName: invoice.client || "–ö–ª—ñ—î–Ω—Ç –Ω–µ –≤–∫–∞–∑–∞–Ω–æ",
        total: typeof invoice.amount === 'number' ? invoice.amount : parseFloat(String(invoice.amount || "0").replace(',', '.')),
        currency: invoice.currency === '980' ? 'UAH' : (invoice.currency || 'UAH'),
        status: invoice.status || "confirmed",
        paymentStatus: "unpaid",
        description: invoice.notes || "",
        positions: []
      };
      
      console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–æ–±–∫–∏:', result);
      return result;
    });
    
    console.log('\n4. –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:');
    console.log('‚úÖ –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ');
    console.log(`‚úÖ –û–±—Ä–æ–±–ª–µ–Ω–æ ${processedInvoices.length} —Ä–∞—Ö—É–Ω–∫—ñ–≤`);
    console.log('‚úÖ Mapping –ø–æ–ª—ñ–≤ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ:');
    console.log('   - client ‚Üí clientName ‚úÖ');
    console.log('   - amount ‚Üí total ‚úÖ');
    console.log('   - currency "980" ‚Üí "UAH" ‚úÖ');
    
    console.log('\n5. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö:');
    console.log(JSON.stringify(processedInvoices, null, 2));
    
    return processedInvoices;
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ:', error);
    console.error('Stack:', error.stack);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testFallbackProcessing()
  .then((result) => {
    console.log('\nüéØ –í–ò–°–ù–û–í–û–ö: –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞ 500 –º–æ–∂–µ –±—É—Ç–∏ –≤:');
    console.log('   - –ó\'—î–¥–Ω–∞–Ω–Ω—ñ –∑ 1–° —Å–µ—Ä–≤–µ—Ä–æ–º');
    console.log('   - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó API endpoint');
    console.log('   - –ü–∞—Ä—Å–∏–Ω–≥—É JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ 1–°');
    console.log('   - –†–æ–±–æ—Ç—ñ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö');
  })
  .catch((error) => {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê:', error.message);
  });