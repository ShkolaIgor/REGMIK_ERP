-- –®–≤–∏–¥–∫–µ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è UTF8 –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –¥–ª—è REGMIK ERP
-- –í–∏–∫–æ–Ω–∞—Ç–∏ –ø—ñ—Å–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –Ω–∞ Proxmox

SET client_encoding = 'UTF8';
SET timezone = 'Europe/Kiev';

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ä–æ–∑—à–∏—Ä–µ–Ω—å
CREATE EXTENSION IF NOT EXISTS "pg_trgm";
CREATE EXTENSION IF NOT EXISTS "unaccent";

-- –§—É–Ω–∫—Ü—ñ—è –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—à—É–∫—É
CREATE OR REPLACE FUNCTION normalize_ukrainian_search(input_text text) 
RETURNS text AS $$
BEGIN
    RETURN lower(trim(regexp_replace(input_text, '\s+', ' ', 'g')));
END;
$$ LANGUAGE plpgsql IMMUTABLE;

-- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó slug –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –Ω–∞–∑–≤–∏
CREATE OR REPLACE FUNCTION ukrainian_to_slug(input_text text) 
RETURNS text AS $$
DECLARE
    result text;
BEGIN
    result := lower(input_text);
    
    result := replace(result, '–∞', 'a');
    result := replace(result, '–±', 'b');
    result := replace(result, '–≤', 'v');
    result := replace(result, '–≥', 'h');
    result := replace(result, '“ë', 'g');
    result := replace(result, '–¥', 'd');
    result := replace(result, '–µ', 'e');
    result := replace(result, '—î', 'ie');
    result := replace(result, '–∂', 'zh');
    result := replace(result, '–∑', 'z');
    result := replace(result, '–∏', 'y');
    result := replace(result, '—ñ', 'i');
    result := replace(result, '—ó', 'i');
    result := replace(result, '–π', 'i');
    result := replace(result, '–∫', 'k');
    result := replace(result, '–ª', 'l');
    result := replace(result, '–º', 'm');
    result := replace(result, '–Ω', 'n');
    result := replace(result, '–æ', 'o');
    result := replace(result, '–ø', 'p');
    result := replace(result, '—Ä', 'r');
    result := replace(result, '—Å', 's');
    result := replace(result, '—Ç', 't');
    result := replace(result, '—É', 'u');
    result := replace(result, '—Ñ', 'f');
    result := replace(result, '—Ö', 'kh');
    result := replace(result, '—Ü', 'ts');
    result := replace(result, '—á', 'ch');
    result := replace(result, '—à', 'sh');
    result := replace(result, '—â', 'shch');
    result := replace(result, '—å', '');
    result := replace(result, '—é', 'iu');
    result := replace(result, '—è', 'ia');
    
    result := regexp_replace(result, '[^a-z0-9]+', '-', 'g');
    result := trim(both '-' from result);
    
    RETURN result;
END;
$$ LANGUAGE plpgsql IMMUTABLE;

-- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ UTF8 –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ
CREATE OR REPLACE FUNCTION is_valid_utf8(input_text text) 
RETURNS boolean AS $$
BEGIN
    BEGIN
        PERFORM convert_to(input_text, 'UTF8');
        RETURN true;
    EXCEPTION WHEN character_not_in_repertoire THEN
        RETURN false;
    END;
END;
$$ LANGUAGE plpgsql IMMUTABLE;

-- –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è UTF8 —Ñ—É–Ω–∫—Ü—ñ–π
SELECT 
    'UTF8 –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ' as status,
    normalize_ukrainian_search('–†–ï–ì–ú–Ü–ö ERP –°–∏—Å—Ç–µ–º–∞') as normalized_test,
    ukrainian_to_slug('–†–ï–ì–ú–Ü–ö ERP –°–∏—Å—Ç–µ–º–∞') as slug_test,
    is_valid_utf8('–¢–µ—Å—Ç–æ–≤–∏–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π —Ç–µ–∫—Å—Ç üá∫üá¶') as utf8_test;