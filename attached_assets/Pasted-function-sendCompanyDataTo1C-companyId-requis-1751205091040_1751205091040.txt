function sendCompanyDataTo1C($companyId)
{
        // Дані підприємства для передачі
        $requisite = getCompanyRequisite($companyId);
        $company   = getCompanyData($companyId);
        $address  =  getCompanyAddress($requisite['ID']);

        // Формуємо дані для відправки
        $firma = 1;
        if(isset($requisite['PRESET_ID'])) {
                $firma = $requisite['PRESET_ID'];
        }

        $data = [
                "Name" => $requisite['RQ_COMPANY_FULL_NAME'],
                "NameShort" => $company['TITLE'],
                "INN" => $requisite['RQ_INN'],
                "FIRMA" => $firma, // 1 - Юридична особа  2 - Фізична особа 3 - Відокремлений підрозділ
                "EDRPOU" => $requisite['RQ_EDRPOU'],
                "PHONE" => isset($company['PHONE'][0]['VALUE']) ? $company['PHONE'][0]['VALUE'] : '',
                "EMAIL" => isset($company['EMAIL'][0]['VALUE']) ? $company['EMAIL'][0]['VALUE'] : '',
                "UPDATE" => 'N',
        ];

        if($address != false) {
                $data['ADDRESS'] = $address;
        } else {
                $data['ADDRESS'] = '';
        }

        $response = sendCompanyInfoTo1C($data); // відправити інформацію про підприємство в 1С

        // Перевірка на помилки
        if ($response !== -1) {
                // Виведення відповіді від 1С
                $json = json_decode($response, true);

                global $USER;
                $userId = intval($USER->GetID());

                if( isset($json['EDRPOU']) || isset($json["Name"]) || isset($json["NameShort"]) ) {
                        $diff = '';
                        if($json["Name"] <> $requisite['RQ_COMPANY_FULL_NAME']) {
                                $diff = $json["Name"].' ('. $requisite['RQ_COMPANY_FULL_NAME'].")\n";
                        }
                        if($json["NameShort"] <> $company['TITLE']) {
                                $diff = $diff . $json["NameShort"].' ('. $company['TITLE'].")\n";
                        }
                        if($json["INN"] <> $requisite['RQ_INN']) {
                                $diff = $diff . $json["INN"].' ('.$requisite['RQ_INN'].")\n";
                        }
                        if($json["FIRMA"] <> $firma) {
                                $diff = $diff . $json["FIRMA"].' ('.$firma.")\n";
                        }

                        if($diff <> '') {
                                CIMNotify::Add([
                                    "TO_USER_ID" => $userId,
                                    "FROM_USER_ID" => $userId,
                                    "MESSAGE" => 'Підприємство з ЄДРПОУ ' . $json['EDRPOU'] . " присутнє в 1С.\n" . $diff . "\n\nОновити інформацію в 1С?",
                                    "NOTIFY_TYPE" => IM_NOTIFY_CONFIRM, // Тип повідомлення з кнопками
                                    "NOTIFY_MODULE" => "im",
                                    "NOTIFY_EVENT" => "confirm_action",
                                    "NOTIFY_TAG" => "confirm_action_".$userId,
                                    "MESSAGE_OUT" => json_encode($json),
                                    "NOTIFY_BUTTONS" => [
                                        [
                                            "TITLE" => "Так",
                                            "VALUE" => "yes",
                                            "TYPE" => "accept"
                                        ],
                                        [
                                            "TITLE" => "Ні",
                                            "VALUE" => "no",
                                            "TYPE" => "cancel"
                                        ]
                                    ]
                                ]);
                        }
                }
        }

        return $response;
}

// Функція для відправки рахунку в 1С
function sendInvoiceTo1C($invoiceData) {
        // URL веб-сервісу 1С для прийому даних
        $apiUrl = "http://192.168.0.1/bitrix/hs/sync/receive_invoice/"; //http://your_1c_server_address/your_web_service_endpoint";
        // Логін та пароль для авторизації на веб-сервісі 1С
        $username = "Школа І.М.";  // Замість your_username введіть ім'я користувача
        $password = "1";  // Замість your_password введіть пароль

        $requisite = getCompanyRequisite($invoiceData['COMPANY']);
        $myEDRPOU = $requisite['RQ_EDRPOU'];

        $requisite = getCompanyRequisite($invoiceData['CLIENT']);
        $clientEDRPOU = $requisite['RQ_EDRPOU'];

        // Підготовка даних для відправки в 1С
        $data = [
                //      'status' => $invoiceData['STATUS'],
                'invoiceId' => $invoiceData['ID'],
                'invoiceName' => $invoiceData['ACCOUNT_NUMBER'],
                'date' => $invoiceData['DATE'],
                'total' => $invoiceData['PRICE'],
                'currency' => $invoiceData['CURRENCY'],
                'company' => $myEDRPOU,
                'client' => $clientEDRPOU,
                'manager' => $invoiceData['MANAGER'],
        ];

        $invoiceId = $invoiceData['ID'];

        $items = getOrderItemsFromBitrix($invoiceId);

        if($items != false) {
            // Підготовка даних для відправки в 1С
            $data['items'] = [];

/* поле type, которое означает следующее:
TYPE_PRODUCT = 1; // Простой товар
TYPE_SET = 2; // Комплект
TYPE_SKU = 3; // Товар с торговыми предложениями
TYPE_OFFER = 4; // Торговое предложение
TYPE_FREE_OFFER = 5; // Торговое предложение, у которого нет товара (не указан или удален)
TYPE_EMPTY_SKU = 6; // Специфический тип, означает невалидный товар с торговыми предложениями*/

            foreach ($items['productRows'] as $item) {
                $data["items"][] = [
                    "name" => $item['productName'],
                    "quantity" => $item['quantity'],
                    "price" => $item['price'],
                    "priceAccount" => $item['priceAccount'],
                    "priceNetto" => $item['priceNetto'],
                    "priceBrutto" => $item['priceBrutto'],
                    "priceExclusive" => $item['priceExclusive'],
                    "productCode" => $item['id'],
                    "type" => $item['type'],
                    "measureName" => $item['measureName'],
                    "discountSum" => $item['discountSum'],
                    "taxRate" => $item['taxRate'],
                ];
            }
        }

        $jsonData = json_encode($data);

        $curl = curl_init();
        curl_setopt_array($curl, array(
                CURLOPT_URL => $apiUrl,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_POST => true,
                CURLOPT_POSTFIELDS => $jsonData,
                CURLOPT_USERPWD  => "$username:$password",
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                ),
        ));

        $response = curl_exec($curl);
        curl_close($curl);

        $result = json_decode($response, true);

        return $result;
}