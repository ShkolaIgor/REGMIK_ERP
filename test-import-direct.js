import { storage } from './server/db-storage.ts';

// –ü—Ä—è–º–∏–π —Ç–µ—Å—Ç —ñ–º–ø–æ—Ä—Ç—É –≤–∏—Ö—ñ–¥–Ω–∏—Ö —Ä–∞—Ö—É–Ω–∫—ñ–≤
async function testDirectImport() {
  console.log('üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä—è–º–æ–≥–æ —ñ–º–ø–æ—Ä—Ç—É –≤–∏—Ö—ñ–¥–Ω–∏—Ö —Ä–∞—Ö—É–Ω–∫—ñ–≤...\n');
  
  try {
    // –°—Ç–≤–æ—Ä–∏–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É
    const testInvoice = {
      id: 'test-outgoing-001',
      number: '–†–†-2025-001',
      date: '2025-01-11',
      clientName: '–¢–û–í "–¢–µ—Å—Ç–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç"',
      clientTaxCode: '12345678',
      total: '15000.00',
      currency: 'UAH',
      status: 'paid',
      items: [
        {
          name: '–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 1',
          quantity: '10',
          unit: '—à—Ç',
          price: '1000.00',
          total: '10000.00'
        },
        {
          name: '–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 2', 
          quantity: '5',
          unit: '—à—Ç',
          price: '1000.00',
          total: '5000.00'
        }
      ]
    };

    console.log('1. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ç–æ–¥—É generateOrderNumber...');
    const orderNumber = await storage.generateOrderNumber();
    console.log(`‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ${orderNumber}`);

    console.log('\n2. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—É —Ä–∞—Ö—É–Ω–∫—É...');
    
    // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ä–∞—Ö—É–Ω–æ–∫ (—Å–∏–º—É–ª—è—Ü—ñ—è import1COutgoingInvoice)
    console.log(`–Ü–º–ø–æ—Ä—Ç —Ä–∞—Ö—É–Ω–∫—É: ${testInvoice.number}`);
    console.log(`–ö–ª—ñ—î–Ω—Ç: ${testInvoice.clientName}`);
    console.log(`–°—É–º–∞: ${testInvoice.total} ${testInvoice.currency}`);
    console.log(`–ü–æ–∑–∏—Ü—ñ–π: ${testInvoice.items.length}`);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —á–∏ —î –∫–ª—ñ—î–Ω—Ç
    console.log('\n3. –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞...');
    let client = await storage.getClientByTaxCode(testInvoice.clientTaxCode);
    
    if (!client) {
      console.log('–ö–ª—ñ—î–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π, —Å—Ç–≤–æ—Ä—é—é –Ω–æ–≤–æ–≥–æ...');
      client = await storage.createClient({
        name: testInvoice.clientName,
        taxCode: testInvoice.clientTaxCode,
        fullName: testInvoice.clientName,
        clientTypeId: 1,
        statusId: 1,
        isActive: true
      });
      console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–ª—ñ—î–Ω—Ç–∞ ID: ${client.id}`);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∫–ª—ñ—î–Ω—Ç–∞ ID: ${client.id}`);
    }

    // –°—Ç–≤–æ—Ä–∏–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è 
    console.log('\n4. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...');
    const order = await storage.createOrder({
      orderNumber: orderNumber,
      clientId: client.id,
      status: 'completed',
      orderDate: new Date(testInvoice.date),
      totalAmount: testInvoice.total,
      currency: testInvoice.currency,
      notes: `–Ü–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –∑ 1–° —Ä–∞—Ö—É–Ω–æ–∫ ${testInvoice.number}`,
      invoiceNumber: testInvoice.number
    });
    
    console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ID: ${order.id}, –Ω–æ–º–µ—Ä: ${order.orderNumber}`);

    console.log('\n5. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...');
    for (const item of testInvoice.items) {
      // –ó–Ω–∞–π–¥–µ–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä–∏–º–æ —Ç–æ–≤–∞—Ä
      let product = await storage.getProductByName(item.name);
      
      if (!product) {
        console.log(`–°—Ç–≤–æ—Ä—é—é —Ç–æ–≤–∞—Ä: ${item.name}`);
        product = await storage.createProduct({
          name: item.name,
          sku: `1C-${Date.now()}`,
          categoryId: 1,
          unit: item.unit,
          retailPrice: item.price,
          costPrice: item.price,
          isActive: true
        });
        console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ç–æ–≤–∞—Ä ID: ${product.id}`);
      } else {
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä ID: ${product.id}`);
      }

      // –°—Ç–≤–æ—Ä–∏–º–æ –ø–æ–∑–∏—Ü—ñ—é –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      await storage.createOrderItem({
        orderId: order.id,
        productId: product.id,
        quantity: parseInt(item.quantity),
        unitPrice: item.price,
        totalPrice: item.total
      });
      
      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –ø–æ–∑–∏—Ü—ñ—é: ${item.name} x ${item.quantity}`);
    }

    console.log('\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û!');
    console.log(`–°—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #${order.orderNumber} –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ "${client.name}"`);
    console.log(`–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${testInvoice.total} ${testInvoice.currency}`);
    console.log(`–ü–æ–∑–∏—Ü—ñ–π —Ç–æ–≤–∞—Ä—ñ–≤: ${testInvoice.items.length}`);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error.message);
    console.error(error.stack);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testDirectImport().catch(console.error);