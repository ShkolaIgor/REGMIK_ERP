/**
 * –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –æ–±—Ä–æ–±–∫–∏ 1–° –¥–∞–Ω–∏—Ö –±–µ–∑ –º–æ–¥—É–ª—å–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
 */

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö (—Å–∫–æ–ø—ñ—Ä–æ–≤–∞–Ω—ñ –∑ db-storage.ts)
function convertCurrencyCode(currencyCode) {
  const currencyMap = {
    '980': 'UAH',
    '840': 'USD', 
    '978': 'EUR',
    '643': 'RUB',
    '985': 'PLN'
  };
  return currencyMap[currencyCode] || currencyCode;
}

function parseUkrainianDecimal(value) {
  if (typeof value === 'number') return value;
  return parseFloat(String(value).replace(',', '.'));
}

// –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –∑ 1–° (—Ä–µ–∞–ª—å–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
const sample1CData = {
  "invoices": [
    {
      "invoiceNumber": "–†–ú00-027688",
      "date": "2025-07-11",
      "client": "–í–Ü–ö–û–†–î",
      "amount": 9072,
      "currency": "980",
      "notes": "",
      "status": "posted"
    },
    {
      "invoiceNumber": "–†–ú00-027687", 
      "date": "2025-07-11",
      "client": "–í–Ü–ö–û–†–î",
      "amount": 4752,
      "currency": "980",
      "notes": "",
      "status": "posted"
    }
  ]
};

console.log('üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ —Ä–µ–∞–ª—å–Ω–∏—Ö 1–° –¥–∞–Ω–∏—Ö\n');

try {
  console.log('1. –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –∑ 1–°:');
  console.log(JSON.stringify(sample1CData, null, 2));
  
  console.log('\n2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏:');
  console.log('‚úÖ –ü–æ–ª–µ "invoices" —ñ—Å–Ω—É—î:', !!sample1CData.invoices);
  console.log('‚úÖ –¶–µ –º–∞—Å–∏–≤:', Array.isArray(sample1CData.invoices));
  console.log('‚úÖ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞—Ö—É–Ω–∫—ñ–≤:', sample1CData.invoices.length);
  
  console.log('\n3. –û–±—Ä–æ–±–∫–∞ –∫–æ–∂–Ω–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É:');
  
  const processedInvoices = sample1CData.invoices.map((invoice, index) => {
    console.log(`\n   üìã –†–∞—Ö—É–Ω–æ–∫ ${index + 1}:`);
    console.log('   - –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ:', invoice);
    
    try {
      const processed = {
        id: invoice.invoiceNumber || `1c-${index}`,
        number: invoice.invoiceNumber || `‚Ññ${index + 1}`,
        date: invoice.date || new Date().toISOString().split('T')[0],
        clientName: invoice.client || "–ö–ª—ñ—î–Ω—Ç –Ω–µ –≤–∫–∞–∑–∞–Ω–æ", // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: client –∑–∞–º—ñ—Å—Ç—å clientName
        total: parseUkrainianDecimal(String(invoice.amount || "0")), // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: amount –∑–∞–º—ñ—Å—Ç—å total
        currency: convertCurrencyCode(invoice.currency || "UAH"), // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è 980‚ÜíUAH
        status: invoice.status || "confirmed",
        paymentStatus: "unpaid",
        description: invoice.notes || "",
        positions: []
      };
      
      console.log('   - –û–±—Ä–æ–±–ª–µ–Ω—ñ –¥–∞–Ω—ñ:', processed);
      console.log('   ‚úÖ –£—Å–ø—ñ—à–Ω–æ');
      return processed;
      
    } catch (error) {
      console.error(`   ‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏: ${error.message}`);
      throw error;
    }
  });
  
  console.log('\n4. –ü—ñ–¥—Å—É–º–∫–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:');
  console.log('‚úÖ –í—Å—ñ —Ä–∞—Ö—É–Ω–∫–∏ –æ–±—Ä–æ–±–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
  console.log(`‚úÖ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${processedInvoices.length}`);
  console.log('‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –≤–∞–ª—é—Ç–∏: 980 ‚Üí UAH');
  console.log('‚úÖ Mapping –ø–æ–ª—ñ–≤: client ‚Üí clientName, amount ‚Üí total');
  
  console.log('\n5. –§—ñ–Ω–∞–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
  console.log(JSON.stringify(processedInvoices, null, 2));
  
  console.log('\nüéØ –í–ò–°–ù–û–í–û–ö:');
  console.log('‚úÖ –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –ø—Ä–∞—Ü—é—î –ü–û–í–ù–Ü–°–¢–Æ –ü–†–ê–í–ò–õ–¨–ù–û');
  console.log('‚úÖ –í—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è mapping –ø–æ–ª—ñ–≤ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ');
  console.log('‚úÖ –§—É–Ω–∫—Ü—ñ—ó convertCurrencyCode —Ç–∞ parseUkrainianDecimal –ø—Ä–∞—Ü—é—é—Ç—å');
  console.log('');
  console.log('üí° –Ø–∫—â–æ API –ø–æ–≤–µ—Ä—Ç–∞—î 500, –ø—Ä–æ–±–ª–µ–º–∞ –ù–ï –≤ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö');
  console.log('üí° –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ:');
  console.log('   - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é API endpoint (isSimpleAuthenticated)');
  console.log('   - –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö');
  console.log('   - –†–æ–±–æ—Ç—É —Ñ—É–Ω–∫—Ü—ñ—ó get1COutgoingInvoices()');
  console.log('   - –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ 1–° —Å–µ—Ä–≤–µ—Ä–æ–º');
  
} catch (error) {
  console.error('‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê –≤ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö:', error);
  console.error('Stack trace:', error.stack);
}