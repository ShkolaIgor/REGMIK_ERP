#!/usr/bin/env node

// –¢–µ—Å—Ç –Ω–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ URL –¥–ª—è 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó

function testUrlStructure() {
  console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ URL –¥–ª—è 1–° —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó\n');
  
  // –ë–∞–∑–æ–≤–∏–π URL –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  const baseUrl = 'http://baf.regmik.ua/bitrix/hs/erp';
  
  // –¢–µ—Å—Ç —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è URL –¥–ª—è –≤—Ö—ñ–¥–Ω–∏—Ö –Ω–∞–∫–ª–∞–¥–Ω–∏—Ö
  function getInvoicesUrl(base) {
    let url = base.trim();
    if (!url.endsWith('/')) url += '/';
    url += 'invoices';
    return url;
  }
  
  // –¢–µ—Å—Ç —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è URL –¥–ª—è –≤–∏—Ö—ñ–¥–Ω–∏—Ö —Ä–∞—Ö—É–Ω–∫—ñ–≤
  function getOutgoingInvoicesUrl(base) {
    let url = base.trim();
    if (!url.endsWith('/')) url += '/';
    url += 'outgoing-invoices';
    return url;
  }
  
  // –¢–µ—Å—Ç–æ–≤—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó
  const testCases = [
    { name: '–ë–∞–∑–æ–≤–∏–π URL –±–µ–∑ —Å–ª–µ—à—É', url: 'http://baf.regmik.ua/bitrix/hs/erp' },
    { name: '–ë–∞–∑–æ–≤–∏–π URL –∑ —Å–ª–µ—à–µ–º', url: 'http://baf.regmik.ua/bitrix/hs/erp/' },
    { name: '–°—Ç–∞—Ä–∏–π —Ñ–æ—Ä–º–∞—Ç –∑ /invoices', url: 'http://baf.regmik.ua/bitrix/hs/erp/invoices' }
  ];
  
  testCases.forEach(testCase => {
    console.log(`üìù –¢–µ—Å—Ç: ${testCase.name}`);
    console.log(`   –í—Ö—ñ–¥–Ω–∏–π URL: ${testCase.url}`);
    console.log(`   üîΩ –í—Ö—ñ–¥–Ω—ñ –Ω–∞–∫–ª–∞–¥–Ω—ñ: ${getInvoicesUrl(testCase.url)}`);
    console.log(`   üîº –í–∏—Ö—ñ–¥–Ω—ñ —Ä–∞—Ö—É–Ω–∫–∏: ${getOutgoingInvoicesUrl(testCase.url)}`);
    console.log('');
  });
  
  console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:');
  console.log('‚Ä¢ –ë–∞–∑–æ–≤–∏–π URL: http://baf.regmik.ua/bitrix/hs/erp');
  console.log('‚Ä¢ –í—Ö—ñ–¥–Ω—ñ –Ω–∞–∫–ª–∞–¥–Ω—ñ: http://baf.regmik.ua/bitrix/hs/erp/invoices');
  console.log('‚Ä¢ –í–∏—Ö—ñ–¥–Ω—ñ —Ä–∞—Ö—É–Ω–∫–∏: http://baf.regmik.ua/bitrix/hs/erp/outgoing-invoices');
  console.log('‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ URL –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –¥–ª—è –≤—Å—ñ—Ö –≤–∏–ø–∞–¥–∫—ñ–≤ ‚úÖ');
}

testUrlStructure();