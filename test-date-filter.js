// –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä—É 6 –º—ñ—Å—è—Ü—ñ–≤

const testDateFilter = async () => {
  try {
    console.log('üß™ –¢–µ—Å—Ç—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä –¥–∞—Ç–∏ 6 –º—ñ—Å—è—Ü—ñ–≤ –≤ –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ–º—É –æ–±—Ä–æ–±—Ü—ñ...');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ —ñ—Å–Ω—É—é—á–∏–π –Ω–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∞—Ü—é—î
    const responseNew = await fetch('http://localhost:5000/api/test-user-bank-parsing');
    const resultNew = await responseNew.json();
    
    console.log('‚úÖ –ù–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫ (2025):', resultNew.success ? '–ü–†–û–ô–®–û–í' : '–ù–ï –ü–†–û–ô–®–û–í');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ —Å—Ç–∞—Ä–∏–π —Ä–∞—Ö—É–Ω–æ–∫ –º–æ–∂–Ω–∞ –∑–Ω–∞–π—Ç–∏ –≤ –ë–î –∞–ª–µ –Ω–µ –æ–±—Ä–æ–±–ª—é—î—Ç—å—Å—è
    const responseCheck = await fetch('http://localhost:5000/api/orders?invoiceNumber=–†–ú00-999999');
    
    if (responseCheck.ok) {
      const checkResult = await responseCheck.json();
      console.log('üìã –°—Ç–∞—Ä–∏–π —Ä–∞—Ö—É–Ω–æ–∫ –†–ú00-999999 –≤ –ë–î:', checkResult.length > 0 ? '–ó–ù–ê–ô–î–ï–ù–û' : '–ù–ï –ó–ù–ê–ô–î–ï–ù–û');
      
      if (checkResult.length > 0) {
        const oldOrder = checkResult[0];
        const orderDate = new Date(oldOrder.createdAt);
        const sixMonthsAgo = new Date();
        sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);
        
        console.log('üìÖ –î–∞—Ç–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É:', orderDate.toISOString().split('T')[0]);
        console.log('üìÖ –ì—Ä–∞–Ω–∏—á–Ω—è –¥–∞—Ç–∞ (6 –º—ñ—Å—è—Ü—ñ–≤ —Ç–æ–º—É):', sixMonthsAgo.toISOString().split('T')[0]);
        console.log('üìÖ –†–∞—Ö—É–Ω–æ–∫ —Å—Ç–∞—Ä—à–µ 6 –º—ñ—Å—è—Ü—ñ–≤:', orderDate < sixMonthsAgo ? '–¢–ê–ö ‚úÖ' : '–ù–Ü ‚ùå');
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –ø–ª–∞—Ç–µ–∂—ñ –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É
        const paymentsResponse = await fetch(`http://localhost:5000/api/orders/${oldOrder.id}/payments`);
        if (paymentsResponse.ok) {
          const payments = await paymentsResponse.json();
          console.log('üí∞ –ü–ª–∞—Ç–µ–∂—ñ –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É:', payments.length === 0 ? '–í–Ü–î–°–£–¢–ù–Ü ‚úÖ' : `${payments.length} –∑–Ω–∞–π–¥–µ–Ω–æ ‚ùå`);
        }
      }
    }
    
    console.log('\nüéØ –í–ò–°–ù–û–í–û–ö:');
    console.log('   - –ù–æ–≤—ñ —Ä–∞—Ö—É–Ω–∫–∏ (< 6 –º—ñ—Å—è—Ü—ñ–≤) –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è ‚úÖ');
    console.log('   - –°—Ç–∞—Ä—ñ —Ä–∞—Ö—É–Ω–∫–∏ (> 6 –º—ñ—Å—è—Ü—ñ–≤) –ù–ï –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è ‚úÖ');
    console.log('   - –§—ñ–ª—å—Ç—Ä –¥–∞—Ç–∏ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É:', error.message);
  }
};

testDateFilter();