/**
 * –¢–µ—Å—Ç API endpoint –±–µ–∑ –∑–∞–ø—É—Å–∫—É –ø–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
 */

const express = require('express');
const app = express();

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è CORS —Ç–∞ middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°–∏–º—É–ª—é—î–º–æ storage –∑ –ø—Ä–æ—Å—Ç–∏–º–∏ –¥–∞–Ω–∏–º–∏
const mockStorage = {
  async get1COutgoingInvoices() {
    console.log("üîß Mock storage –≤–∏–∫–ª–∏–∫–∞–Ω–æ");
    
    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ—Å—Ç—ñ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
    return [
      {
        id: "–†–ú00-027688",
        number: "–†–ú00-027688", 
        date: "2025-07-11",
        clientName: "–í–Ü–ö–û–†–î",
        total: 9072,
        currency: "UAH",
        status: "posted",
        paymentStatus: "unpaid",
        description: "",
        clientTaxCode: "",
        itemsCount: 0,
        managerName: "",
        positions: []
      },
      {
        id: "–†–ú00-027687",
        number: "–†–ú00-027687",
        date: "2025-07-11", 
        clientName: "–í–Ü–ö–û–†–î",
        total: 4752,
        currency: "UAH",
        status: "posted",
        paymentStatus: "unpaid", 
        description: "",
        clientTaxCode: "",
        itemsCount: 0,
        managerName: "",
        positions: []
      }
    ];
  }
};

// API endpoint
app.get('/api/1c/outgoing-invoices', async (req, res) => {
  console.log("üì° API Endpoint –≤–∏–∫–ª–∏–∫–∞–Ω–æ: GET /api/1c/outgoing-invoices");
  
  try {
    const invoices = await mockStorage.get1COutgoingInvoices();
    console.log(`‚úÖ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ ${invoices.length} —Ä–∞—Ö—É–Ω–∫—ñ–≤`);
    
    res.json(invoices);
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ API:", error.message);
    res.status(500).json({ 
      error: error.message,
      details: "Mock API test endpoint"
    });
  }
});

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Å–µ—Ä–≤–µ—Ä
const PORT = 5001;
app.listen(PORT, () => {
  console.log(`üöÄ –¢–µ—Å—Ç–æ–≤–∏–π API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üåê –¢–µ—Å—Ç—É–π—Ç–µ: http://localhost:${PORT}/api/1c/outgoing-invoices`);
});

// –†–æ–±–∏–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç
setTimeout(async () => {
  try {
    console.log("\nüß™ –í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç...");
    const response = await fetch(`http://localhost:${PORT}/api/1c/outgoing-invoices`);
    const data = await response.json();
    
    console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É:");
    console.log("- Status:", response.status);
    console.log("- Data length:", data.length);
    console.log("- First item:", JSON.stringify(data[0], null, 2));
    
    process.exit(0);
  } catch (error) {
    console.error("‚ùå –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç –Ω–µ—É—Å–ø—ñ—à–Ω–∏–π:", error.message);
    process.exit(1);
  }
}, 1000);