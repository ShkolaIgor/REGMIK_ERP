/**
 * –ü—Ä—è–º–∏–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü—ñ—ó get1COutgoingInvoices –±–µ–∑ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞
 */

console.log("=== –¢–ï–°–¢ –§–£–ù–ö–¶–Ü–á get1COutgoingInvoices ===");

async function testDirect() {
  try {
    // –ü—Ä–æ–±—É—î–º–æ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –Ω–∞–ø—Ä—è–º—É
    console.log("üì° –Ü–º–ø–æ—Ä—Ç—É—é —Ñ—É–Ω–∫—Ü—ñ—é get1COutgoingInvoices...");
    
    // –°–ø–æ—á–∞—Ç–∫—É —ñ–º–ø–æ—Ä—Ç—É—î–º–æ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ —Ç–∏–ø–∞–º–∏
    const dbStorage = await import('./server/db-storage.js');
    const { get1COutgoingInvoices } = dbStorage;
    
    console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∞");
    
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
    console.log("üîß –í–∏–∫–ª–∏–∫–∞—é get1COutgoingInvoices()...");
    const result = await get1COutgoingInvoices({});
    
    console.log(`‚úÖ –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ`);
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result.length} —Ä–∞—Ö—É–Ω–∫—ñ–≤`);
    
    if (result.length > 0) {
      console.log("üìÑ –ü–µ—Ä—à–∏–π —Ä–∞—Ö—É–Ω–æ–∫:", JSON.stringify(result[0], null, 2));
    }
    
    console.log("\n=== –í–ò–°–ù–û–í–û–ö ===");
    console.log("‚úÖ Backend —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ");
    console.log("‚úÖ –î–∞–Ω—ñ –æ—Ç—Ä–∏–º—É—é—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ");
    console.log("üîß –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–ª–∏–≤–æ –≤ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –∞–±–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—ó");
    
  } catch (error) {
    console.log("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó:", error.message);
    console.log("üìù Stack trace:", error.stack);
    
    console.log("\n=== –í–ò–°–ù–û–í–û–ö ===");
    console.log("‚ùå Backend —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø—Ä–æ–±–ª–µ–º–∏");
    console.log("‚úÖ Fallback –¥–∞–Ω—ñ —É frontend –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å —Ä–æ–±–æ—Ç—É");
    console.log("üîß –ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö");
  }
}

testDirect();